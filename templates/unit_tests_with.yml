# Copyright (c) 2019 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

parameters:
  qt_wrapper: PySide2
  python_version: 3.7
  extra_pip_dependencies: ""
  upload_coverage: false

steps:

# Switch to the right Python Version.
- task: UsePythonVersion@0
  inputs:
    versionSpec: ${{ parameters.python_version }}
  displayName: Use Python ${{ parameters.python_version }}

- bash: Job will upload coverage: ${{ parameters.upload_coverage }}

# Install all Toolkit dependencies for this repo.
# TODO: Look inside info.yml to find which frameworks need to be cloned?
- bash: git clone https://github.com/shotgunsoftware/tk-core --depth 1 --branch SG-13264-python-3-compat-gitattributes ../tk-core
  displayName: Installing Toolkit Dependencies

# Install pip installable modules
- bash: |
    pip install git+https://github.com/shotgunsoftware/tk-toolchain.git@remote_pip_install#egg=tk-toolchain &&
    pip install ${{ parameters.qt_wrapper }} pytest-azurepipelines ${{ parameters.extra_pip_dependencies }}
  displayName: Installing Python modules

# Start xvfb on Linux so we can test with a GUI.
- bash: |
    /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    echo ">>> Started xvfb"
  displayName: Start xvfb on Linux
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

# Run the tests. The task will create a simple coverage file if one is missing.
# It will include all code except for the tests.
- bash: |
    (test -e .coveragerc && echo ".coveragerc was found." ) || ((python -c "print('[run]\nsource=.\nomit=\n    tests/*\n[report]\n\nexclude_lines =\n    raise NotImplementedError')" > .coveragerc) && echo "Generated .coveragerc")
    python -m pytest tests --cov --verbose
  # These environment variables need to be set so Linux runs can connect
  # to xvfb
  env:
    QT_QPA_PLATFORM: offscreen
    DISPLAY: ':99.0'
  displayName: Running tests

- ${{ if eq(parameters.upload_coverage, true) }}:
  - bash: |
      pip install coveralls==1.1 &&
      coveralls
    env:
      COREVALLS_REPO_TOKEN: $(Coveralls.Repo.Token)
