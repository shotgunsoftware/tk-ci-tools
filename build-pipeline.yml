# Copyright (c) 2019 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

parameters:
  # List of Python packages that need to be pip installed for testing.
  - name: extra_test_dependencies
    type: object
    default: []
  # Version of tk-toolchain to use.
  - name: tk_toolchain_ref
    type: string
    default: master
  # List of repositories to clone alongside this repository.
  # To clone the tk-framework-shotgunutils's master branch
  # and a specific tk-framework-qtwidget ref, you would
  # set this parameter to the following:
  # - name: tk-framework-shotgunutils
  # - name: tk-framework-qtwidgets
  #   ref: <branch-or-tag>
  - name: additional_repositories
    type: object
    default: []
  # Git ref of tk-core to use.
  - name: tk_core_ref
    type: string
    default: master
  # Allows to skip test execution.
  # This parameter is deprecated. Please use has_unit_tests and has_ui_tests.
  - name: skip_tests
    type: boolean
    default: false
  # Tells the build pipeline that the repository has unit tests to execute
  - name: has_unit_tests
    type: boolean
    default: true
  # Tells the build pipeline that there are ui automation tests to execute
  - name: has_ui_tests
    type: boolean
    default: false
  # Post test steps
  # This is a list of Azure Pipeline steps that will be inserted
  # right after the tests were run.
  # If you wanted to run a non-standard suite of test as an extra
  # you would specify post_tests_steps as:
  # post_tests_steps:
  # - bash: do_something
  # - bash: do_something_else
  - name: post_tests_steps
    type: object
    default: []
  # Version of the release repository to use.
  # This is meant for deployment to the Toolkit AppStore. This repository is private
  # to the Shotgun team and cannot be accessed by external organizations. This is meant
  # for internal use by the team for testing and should not be modified otherwise.
  - name: release_repo_ref
    type: string
    default: master

# This build pipeline will validate the code style and our test suite on
# multiple platforms.
jobs:
- template: "internal/code-style-validation.yml"
  parameters:
    tk_toolchain_ref: ${{ parameters.tk_toolchain_ref }}
    tk_core_ref: ${{ parameters.tk_core_ref }}

# template expressions are hard to parse visually, so using two ifs instead
# of a single if and(..., ...)
# Note: once we've removed skip_tests from existing pipelines, we can remove the
# the first if.
- ${{ if eq(parameters.skip_tests, false) }}:
  - ${{ if or(parameters.has_unit_tests, parameters.has_ui_tests) }}:
    - template: "internal/run-tests.yml"
      parameters:
        # pass through all parameters
        extra_test_dependencies: ${{ parameters.extra_test_dependencies }}
        tk_toolchain_ref: ${{ parameters.tk_toolchain_ref }}
        additional_repositories: ${{ parameters.additional_repositories }}
        tk_core_ref: ${{ parameters.tk_core_ref }}
        post_tests_steps: ${{ parameters.post_tests_steps }}
        has_unit_tests: ${{ parameters.has_unit_tests }}
        has_ui_tests: ${{ parameters.has_ui_tests }}

# If the build was launched because a tag was created, we'll want to deploy
# this to the AppStore.
- ${{ if startsWith( variables['Build.SourceBranch'], 'refs/tags') }}:
  # Repositories using our build pipeline outside of the
  # shotgunsoftware organization can be tagged, but they can't
  # use our deploy scripts as they do not have the necessary
  # permissions to access our secrets, as they should.
  #
  # Therefore, we need to avoid including this template for repos that are
  # not under the shotgunsoftware organization.
  #
  # FIXME: There is no way to tell if an Azure build is running under
  # our organization or not. What we can do however is check the name
  # of the Azure project from which this build is launched.
  - ${{ if eq( variables['System.TeamProject'], 'Toolkit' ) }}:
    - template: "internal/release.yml"
      parameters:
        tk_toolchain_ref: ${{ parameters.tk_toolchain_ref }}
        release_repo_ref: ${{ parameters.release_repo_ref }}
