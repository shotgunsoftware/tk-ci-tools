# Copyright (c) 2019 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

parameters:
  # Name of the repository to update. Repository is assumed to be under the shotgunsoftware
  # organization on Github.com
  name: ""
  # Name of the secure deploy key to install to update the repository.
  secure_file: ""
  # Public of the repository to update
  public_key: ""
  # Known host of the server hosting the repository.
  known_host: ""

steps:
# This task can be executed only from the "shotgunsoftware"
# organization repositories. It will fail on forks of our
# repos from other users.
#
# Therefore, the deloy key is secured.
#
# Excerpt from https://docs.microsoft.com/en-us/azure/devops/pipelines/repos/github?view=azure-devops&tabs=yaml#validate-contributions-from-forks
#
# By default with GitHub pipelines, secrets associated with
# your build pipeline are not made available to pull request
# builds of forks. These secrets are enabled by default with
# GitHub Enterprise Server pipelines. Secrets include:
#
# - A security token with access to your GitHub repository.
# - These items, if your build uses them:
#   - Service connection credentials
#   - Files from the secure files library (this is what '${{ parameters.secure_file }}' is)
#   - Build variables marked secret

# Here's a link to the documentation of SSH key and how to generate all it's inputs.
# https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/install-ssh-key?view=azure-devops
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: ${{ parameters.known_host }}
    # This is the public key
    sshPublicKey: ${{ parameters.public_key }}
    #sshPassphrase: # Optional
    sshKeySecureFile: ${{ parameters.secure_file }}

# Run the update tool for the given bundle and tag.
- bash: |
    git config --global user.name "Toolkitty"
    git config --global user.email toolkitty@shotgunsoftware.com
    tk-config-update git@github.com:shotgunsoftware/${{ parameters.name }}.git $(Build.DefinitionName) $(Build.SourceBranchName) --push-changes
  displayName: Updating ${{ parameters.name }}
