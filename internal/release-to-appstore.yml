# Copyright (c) 2019 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

parameters:
    release_repo_ref: master

steps:
- task: Bash@3
  displayName: Install the release scripts
  env:
    GH_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN)
    RELEASE_REPO: $(repo.release)
  inputs:
    targetType: inline
    script: |
        git clone --depth 1 "https://github.com/${RELEASE_REPO}" --branch ${{ parameters.release_repo_ref }}  ../release_scripts

- task: Bash@3
  displayName: Prepare release script
  env:
  inputs:
    targetType: inline
    script: |
        pip install -r ../release_scripts/app_store/requirements.txt
    # We don't need to call the internal script's prepare_repo.sh since we will be stating with a fresh environment each time
    # which is setup by Azure. So just clone the repo and install the requirements.

- task: PythonScript@0
  displayName: Detect bundle type
  # By looking at the python file at the root of the repo
  inputs:
    scriptSource: inline
    script: |
        import os
        if os.path.exists("app.py"):
            bundle_type = "app"
        elif os.path.exists("framework.py"):
            bundle_type = "framework"
        elif os.path.exists("engine.py"):
            bundle_type = "engine"
        else:
            bundle_type = "config"

        # Expose the variable to the Azure Pipeline environment
        print(f"##vso[task.setvariable variable=BUNDLE_TYPE]{bundle_type}")


- task: Bash@3
  displayName: Deploy Toolkit bundle to AppStore
  # Deploy the bundle to the Toolkit AppStore. The script expects
  # the bundle type as a parameter, so attempt to guess it.
  env:
    # Just like the DownloadSecureFile, the environment variables here can only
    # be used from builds on shotgunsoftware, not from forks, so we do not have
    # to worry about our credentials leaking to clients, nor do we have to
    # worry about clients pushing code to our appstore from their pull requests.
    sgtk_app_store_api_server: $(sg.app_store.host)
    sgtk_app_store_api_user: $(sg.app_store.script.name)
    sgtk_app_store_api_key: $(sg.app_store.script.key)
    AWS_ACCESS_KEY_ID: $(aws.toolkit.access.id)
    AWS_SECRET_ACCESS_KEY: $(aws.toolkit.access.key)
    GH_ACCESS_TOKEN: $(GITHUB_ACCESS_TOKEN) ## Won't work. This kind of token does not seems to have permission to the rest api
  inputs:
    targetType: inline
    script: |
        if [ $(Build.DefinitionName) = tk-core ]; then
            python ../release_scripts/app_store/core_to_app_store.py --tag $(Build.SourceBranchName)
        else
            python ../release_scripts/app_store/bundle_to_app_store.py --repository $(Build.DefinitionName) --bundle-type "${BUNDLE_TYPE}" --tag $(Build.SourceBranchName)
        fi
