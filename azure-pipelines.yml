# Copyright (c) 2019 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

# We want builds to trigger for 3 reasons:
# - The master branch sees new commits
# - Each PR should get rebuilt when commits are added to it.
# - When we tag something
trigger:
  branches:
    include:
    - master
  tags:
    include:
    - v*
pr:
  branches:
    include:
    - "*"

# This pulls in a variable group from Azure. Variables can be encrypted or not.
variables:
- group: deploy-secrets

# Invoke the build pipeline template with Qt.py has an extra dependency so
# the tests can run properly.
jobs:
- template: build-pipeline.yml
  parameters:
    # There's a test inside this repo that requires Qt.py
    extra_test_dependencies:
    - Qt.py
    # This has the side effect that it ensures we can clone the UI automation
    # repo with the SSH key
    has_ui_tests: true
    # This will ensure we can clone other repositories on a branch
    # or directly on master.
    additional_repositories:
    - name: tk-multi-testing
      ref: azure_test_branch
    - name: tk-framework-qtwidgets
    # This one shouldn't get cloned.
    - name: tk-ci-tools
    post_tests_steps:
    # Ensures the automation library get cloned only on Windows+Python 2.7.
    # Our tests are written in a way that they are skipped if the automation
    # framework is missing, so it's important that has_ui_tests triggers a clone
    # only for builds we can run automation for.
    - bash: |
        PYTHONPATH=../ui_automation python tests/test_ui_automation.py
      displayName: Testing import of UI automation framework.
    # Okay, so install-ssh-key.yml, relative to the current file, is at internal/install-ssh-key.yml
    # However, keep in mind that this parameter will be expanded inside internal/run-with-tests.yml,
    # so we need to put the path relative to that.
    - template: install-ssh-key.yml
    - bash: |
        git clone --depth 1 git@github.com:$RELEASE_REPO ../release_scripts
      env:
        RELEASE_REPO: $(repo.release)
      displayName: Testing release scripts cloning
    # Ensures the Shotgun script credentials can connect to the AppStore.
    - bash: PYTHONPATH=../tk-core/python python tests/test_credentials.py
      env:
        TK_TOOLCHAIN_HOST: $(sg.app_store.host)
        TK_TOOLCHAIN_SCRIPT_NAME: $(sg.app_store.script.name)
        TK_TOOLCHAIN_SCRIPT_KEY: $(sg.app_store.script.key)
      displayName: Testing AppStore credentials
    # Ensures the Shotgun script credentials can connect to the CI site.
    - bash: PYTHONPATH=../tk-core/python python tests/test_credentials.py
      env:
        TK_TOOLCHAIN_HOST: $(sg.ci.host)
        TK_TOOLCHAIN_SCRIPT_NAME: $(sg.ci.script.name)
        TK_TOOLCHAIN_SCRIPT_KEY: $(sg.ci.script.key)
      displayName: Testing CI script user credentials
    # Ensures the Shotgun user credentials can connect to the CI site.
    - bash: PYTHONPATH=../tk-core/python python tests/test_credentials.py
      env:
        TK_TOOLCHAIN_HOST: $(sg.ci.host)
        TK_TOOLCHAIN_SCRIPT_NAME: $(sg.ci.human.login)
        TK_TOOLCHAIN_SCRIPT_KEY: $(sg.ci.human.password)
      displayName: Testing CI human user credentials
